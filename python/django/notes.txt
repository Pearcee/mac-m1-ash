
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'djangogirls',
        'USER': '',
        'PASSWORD': '',
        'HOST': '192.168.1.113',
        'PORT': '',
    }
}

requirements.txt
Django
pylint
autopep8
django-crispy-forms
whitenoise
psycopg2-binary


 'whitenoise.middleware.WhiteNoiseMiddleware',

https://code.visualstudio.com/docs/python/tutorial-django

wsl 
python -m venv env
source env/bin/activate
pip install django
pip install django-pwa

python manage.py makemigrations && python manage.py migrate
python manage.py createsuperuser
python manage.py runserver


(Ctrl+Shift+P)). Then select the Python: Select Interpreter 
source env/bin/activate
python -m venv env
python -m pip install django
django-admin startproject website .
django-admin startapp api

python manage.py runserver
python manage.py startapp hello


python -m pip install --upgrade pip



#

sudo apt-get install python3-venv    # If needed
python3 -m venv env

python3 manage.py makemigrations
python3 manage.py migrate

python3 manage.py createsuperuser

pip freeze > requirements.txt
pip install -r requirements.txt


pip install django-pwa

pip install wagtail

wagtail start mysite

pip install -r requirements.txt
./manage.py migrate
./manage.py createsuperuser
./manage.py runserver
python manage.py collectstatic

source ../env/bin/activate
manage.py runserver

pip install -r requirements.txt

https://www.django-rest-framework.org/tutorial/1-serialization/